Task 4: Using Functions in Queries and Writing Subqueries

Case Study: Online Food Ordering System

Objective: To perform advanced query processing and test heuristics by designing optimal 

correlated and nested subqueries, such as finding summary statistics, for the Online Food 

Ordering System.

1. Using Aggregate Functions with Subqueries

Query 1: Find the customer(s) who placed the highest order total.

Output:

Query 2: List all menu items whose price is above the average price of all menu items.

Output:

2. Nested Subqueries

Query 1: Find the names of customers who placed orders worth more than 600.

Output:
Query 2: Retrieve the name of the restaurant(s) offering the most expensive menu item.

Output:

Query 1: Retrieve the category of menu items with the highest average price.

Output:

3. Correlated Subqueries

Query 1: Find all orders where the total is greater than the average total of all orders.
Query 2: Find customers who have placed more than one order.

Output:

Query 3: Retrieve the list of menu items priced above the average price for their category.

Output:

Query 4: Find customers who have placed orders with totals higher than the average order total of 

all customers.
Output:

4. Summary Statistics with Subqueries

Query 1: Retrieve the total revenue generated by each restaurant.

Output:

Query 2: Find the average price of menu items for each restaurant.
